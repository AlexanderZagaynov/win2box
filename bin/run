#!/bin/bash
source "$0/../env"

# check if vm exists
if VBoxManage showvminfo "$VM" &> /dev/null; then
  # echo "VBox named $VM exists. Please remove it completely first."
  # exit 1
  VBoxManage unregistervm --delete "$VM"
fi

# prepare config ISO
mkisofs -J -r -o "$CONFIG_ISO" "$CONFIG_DIR"

# create vm
VBoxManage createvm                    \
  --name "$VM" --basefolder "$BOX_DIR" \
  --ostype "Windows10_64"              \
  --register                           \
;

# use single SATA controller for all drives
VBoxManage storagectl "$VM"         \
  --name "SATA Controller"          \
  --add sata --controller IntelAHCI \
  --portcount 4                     \
;

# hard drive
VBoxManage createhd --filename "$HDD_FILE" --size 32768
VBoxManage storageattach "$VM"    \
  --storagectl "SATA Controller"  \
  --port 0 --device 0 --type hdd  \
  --medium "$HDD_FILE"            \
;

# primary ISO
VBoxManage storageattach "$VM"        \
  --storagectl "SATA Controller"      \
  --port 1 --device 0 --type dvddrive \
  --medium "$WIN_ISO"                 \
;

# config ISO
VBoxManage storageattach "$VM"        \
  --storagectl "SATA Controller"      \
  --port 2 --device 0 --type dvddrive \
  --medium "$CONFIG_ISO"              \
;

# VirtualBox Guest Additions (drivers)
VBoxManage storageattach "$VM"        \
  --storagectl "SATA Controller"      \
  --port 3 --device 0 --type dvddrive \
  --medium "$VBOX_ISO"                \
;

# general configs
# TODO: own manageable host only (or bridge?) networking
VBoxManage modifyvm "$VM"                            \
  --ioapic on --audio none --clipboard bidirectional \
  --boot1 dvd --boot2 disk --boot3 none --boot4 none \
  --nic1 hostonly --hostonlyadapter1 vboxnet0        \
  --memory 2048 --vram 32                            \
;

# VBoxManage modifyvm $VM --nic1 bridged --bridgeadapter1 e1000g0
# VBoxHeadless -s $VM # --startvm
VBoxManage startvm "$VM"
